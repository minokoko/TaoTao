package com.taotao.rest.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.taotao.common.utils.JsonUtils;
import com.taotao.mapper.TbContentMapper;
import com.taotao.pojo.TbContent;
import com.taotao.pojo.TbContentExample;
import com.taotao.pojo.TbContentExample.Criteria;
import com.taotao.rest.component.JedisClient;
import com.taotao.rest.service.ContentService;

/**
 * 内容查询服务service
 * 
 * @author jessyon
 *
 */
@Service
public class ContentServiceImpl implements ContentService {

	@Autowired
	private TbContentMapper contentMapper;

	@Autowired
	private JedisClient jedisClient;

	@Value("${REDIS_CONTENT_KEY}")
	private String REDIS_CONTENT_KEY;

	/**
	 * 根据cid查询内容列表
	 */
	@Override
	public List<TbContent> getContentList(Long cid) {
		// 添加缓存
		// 查询数据库之前，查询缓存

		TbContentExample example = new TbContentExample();
		Criteria criteria = example.createCriteria();
		criteria.andCategoryIdEqualTo(cid);

		// 返回结果之前，先将结果缓存到redis
		try {
			// 为了规范key，可以使用hash
			// 定义一个保存内容的key，hash中的每一项是一个cid
			// value是list，需要把list转换成json数据
			jedisClient.hset(REDIS_CONTENT_KEY, cid + "", JsonUtils.objectToJson(list));

		} catch (Exception e) {
			// TODO: handle exception
		}

		// 执行查询并返回
		List<TbContent> list = contentMapper.selectByExampleWithBLOBs(example);
	}

}
